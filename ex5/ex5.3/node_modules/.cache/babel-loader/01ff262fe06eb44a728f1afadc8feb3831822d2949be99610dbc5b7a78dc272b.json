{"ast":null,"code":"// Require and initialize the Express module\nconst express=require('express');const bodyParser=require('body-parser');const app=express();// Serve static files from the 'public' directory\napp.use(express.static('public'));// Route for the root URL ('/') using a GET request\napp.get('/',(req,res)=>{res.send(\"Username: \".concat(req.query.username,\", Password: \").concat(req.query.password));// Add middleware for parsing application/x-www-form-urlencoded\napp.use(bodyParser.urlencoded({extended:true}));app.post('/',(req,res)=>{// Now using req.body to get data sent from the POST request\nres.send(\"Username: \".concat(req.body.username,\", Password: \").concat(req.body.password));});// Start the server and make it listen on port 3000\napp.listen(3000,()=>{console.log('Server running on http://localhost:3000');});});","map":{"version":3,"names":["express","require","bodyParser","app","use","static","get","req","res","send","concat","query","username","password","urlencoded","extended","post","body","listen","console","log"],"sources":["C:/Projects/advanced_system_programing/ex5.3/src/App.js"],"sourcesContent":["// Require and initialize the Express module\nconst express = require('express');\nconst bodyParser = require('body-parser');\nconst app = express();\n\n// Serve static files from the 'public' directory\napp.use(express.static('public'));\n\n// Route for the root URL ('/') using a GET request\napp.get('/', (req, res) => {\n    res.send(`Username: ${req.query.username}, Password: ${req.query.password}`);\n// Add middleware for parsing application/x-www-form-urlencoded\napp.use(bodyParser.urlencoded({ extended: true }));\n\napp.post('/', (req, res) => {\n    // Now using req.body to get data sent from the POST request\n    res.send(`Username: ${req.body.username}, Password: ${req.body.password}`);\n});\n\n// Start the server and make it listen on port 3000\napp.listen(3000, () => {\n    console.log('Server running on http://localhost:3000');\n});\n});"],"mappings":"AAAA;AACA,KAAM,CAAAA,OAAO,CAAGC,OAAO,CAAC,SAAS,CAAC,CAClC,KAAM,CAAAC,UAAU,CAAGD,OAAO,CAAC,aAAa,CAAC,CACzC,KAAM,CAAAE,GAAG,CAAGH,OAAO,CAAC,CAAC,CAErB;AACAG,GAAG,CAACC,GAAG,CAACJ,OAAO,CAACK,MAAM,CAAC,QAAQ,CAAC,CAAC,CAEjC;AACAF,GAAG,CAACG,GAAG,CAAC,GAAG,CAAE,CAACC,GAAG,CAAEC,GAAG,GAAK,CACvBA,GAAG,CAACC,IAAI,cAAAC,MAAA,CAAcH,GAAG,CAACI,KAAK,CAACC,QAAQ,iBAAAF,MAAA,CAAeH,GAAG,CAACI,KAAK,CAACE,QAAQ,CAAE,CAAC,CAChF;AACAV,GAAG,CAACC,GAAG,CAACF,UAAU,CAACY,UAAU,CAAC,CAAEC,QAAQ,CAAE,IAAK,CAAC,CAAC,CAAC,CAElDZ,GAAG,CAACa,IAAI,CAAC,GAAG,CAAE,CAACT,GAAG,CAAEC,GAAG,GAAK,CACxB;AACAA,GAAG,CAACC,IAAI,cAAAC,MAAA,CAAcH,GAAG,CAACU,IAAI,CAACL,QAAQ,iBAAAF,MAAA,CAAeH,GAAG,CAACU,IAAI,CAACJ,QAAQ,CAAE,CAAC,CAC9E,CAAC,CAAC,CAEF;AACAV,GAAG,CAACe,MAAM,CAAC,IAAI,CAAE,IAAM,CACnBC,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC,CAC1D,CAAC,CAAC,CACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}